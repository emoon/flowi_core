// This file is auto-generated by api_gen. DO NOT EDIT!

#[allow(unused_imports)]
use crate::manual::{get_last_error, Color, FlString, Result};

#[allow(unused_imports)]
use bitflags::bitflags;

#[allow(unused_imports)]
use crate::image::*;

#[allow(unused_imports)]
use crate::shader::*;

#[repr(C)]
pub struct IoFfiApi {
    pub(crate) data: *const core::ffi::c_void,
    pub(crate) dummy: unsafe extern "C" fn(data: *const core::ffi::c_void),
}

#[cfg(feature = "static")]
extern "C" {
    pub fn fl_io_dummy_impl(data: *const core::ffi::c_void);
}

#[no_mangle]
pub static mut g_flowi_io_api: *const IoFfiApi = std::ptr::null_mut();

#[repr(C)]
#[derive(Debug)]
pub struct Io {
    _dummy: u32,
}

impl Io {
    /// Load image from file/url. Supported formats are: JPG, PNG, WEBP
    pub fn dummy() {
        unsafe {
            let _api = &*g_flowi_io_api;
            #[cfg(feature = "static")]
            fl_io_dummy_impl(_api.data);
            #[cfg(any(feature = "dynamic", feature = "plugin"))]
            (_api.dummy)(_api.data);
        }
    }
}
